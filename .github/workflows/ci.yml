name: CI Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |

          # Get the latest commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)

          docker buildx build --platform linux/arm64 -t ${{ secrets.DOCKERHUB_USERNAME }}/reactjs-app:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/reactjs-app:${COMMIT_HASH} . --push

      - name: Set up SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.DIGITALOCEAN_SSH_PRIVATE_KEY_2}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
      - name: Set up SSH tunnel
        run : |
          echo "Setting up SSH tunnel..."
          ssh -o StrictHostKeyChecking=no -L ${{ secrets.ROUTER_PORT }}:${{ secrets.RPI5_IP }}:${{ secrets.PORT }} ${{ secrets.RPI5_USERNAME }}@${{ secrets.ROUTER_PUBLIC_IP }} -p ${{
            secrets.ROUTER_PORT }} -N &
          sleep 5  # Wait for the tunnel to establish

      - name: Test SSH connection
        run: |
          echo "Testing SSH connection to the local machine through the tunnel..."
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.ROUTER_PORT }} ${{ secrets.RPI5_USERNAME }}@${{ secrets.ROUTER_PUBLIC_IP }} "echo Connection Successful"

      - name: Deploy Docker container
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.ROUTER_PORT }} ${{ secrets.RPI5_USERNAME }}@${{ secrets.ROUTER_PUBLIC_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/reactjs-app:latest
            docker stop my-reactjs-container || true
            docker rm my-reactjs-container || true
            docker run -d --name my-reactjs-container \
                -p 80:80 -p 443:443 \
                -v /etc/letsencrypt/live/adnansabovic.online:/etc/letsencrypt/live/adnansabovic.online \
                -v /etc/letsencrypt/archive/adnansabovic.online:/etc/letsencrypt/archive/adnansabovic.online \
                ${{ secrets.DOCKERHUB_USERNAME }}/reactjs-app:latest      
          EOF


